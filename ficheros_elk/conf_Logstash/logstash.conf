# recibimos las alertas generadas en los correladores
input {
  tcp {
    port => 45555
    tags => ["add_alert"]
  }
}

# recibimos logs
input {
  file {
    path => "/var/log/centralizador/in.log"
    tags => ["logs"]
  }
}

filter{
  # obtenemos los campos de una regla de correlacion
  if "add_alert" in [tags]{
    grok{
      match => [ "message", "%{DATA:regla},%{DATA:regla_level},%{DATA:regla_nombre},%{DATA:regla_descripcion},%{DATA:contexto},%{GREEDYDATA:mssg}"]
    }
    json{
      source => "mssg"
      target => "rule"
    }
    mutate{
      # el logs principal de la regla de correlacion es el primero
      update => { "message" => "%{[rule][message_n0]}"}
      remove_field => [ "mssg" ]
    }
  }

  # Sacamos los campos de la cabecera syslog
  grok{
    match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_programname}: %{GREEDYDATA:msg}" ]
  }
  
  # A continuacion parseamos los logs de tipo intel
  if [syslog_programname] == "intel" {
    kv{
      source => "msg"
      field_split => " "
      value_split => "="
    }
  }

  # A continuacion parsemos los logs de tipo ftp
  if [syslog_programname] == "ftp" {
    kv{
      source => "msg"
      field_split => " "
      value_split => "="
    }
  }

  # Se parsea el log de la alerta snort
  if [syslog_programname] == "snort" {
    grok{
      match => [ "msg", "\[%{INT:snort_gid}\:%{INT:snort_sid}\:%{INT:snort_pid}\].%{GREEDYDATA:rule_description}.\[Classification\: %{DATA:classification}\].*\[Priority\: %{INT:snort_priority}].*{%{WORD:protocol}}.*%{IP:srcip}:%{INT:srcport} \-\>.*%{IP:dstip}:%{INT:dstport}" ]
    }
  }

  # Se parsea el log de tipo waf
  if [syslog_programname] == "waf" {
    grok{
      match => [ "msg", "\[%{INT:snort_gid}\:%{INT:snort_sid}\:%{INT:snort_pid}\].%{GREEDYDATA:rule_description}.\[Classification\: %{DATA:classification}\].*\[Priority\: %{INT:snort_priority}].*{%{WORD:protocol}}.*%{IP:srcip}:%{INT:srcport} \-\>.*%{IP:dstip}:%{INT:dstport}" ]
    }
  }
  


  # Obtenemos la fecha en UTC, si no es una alerta de correlacion
  if !("add_alert" in [tags]){
    date {
      ##timezone => "Europe/Madrid"
      match => ["syslog_timestamp","MMM  d HH:mm:ss","MMM dd HH:mm:ss","ISO8601"]
    }
  }
  
  # Eliminamos el campo temporal msg
  mutate {
    remove_field => [ "msg" ]
  }
}

output {
  # envio a elastic, nuestra bbdd
  elasticsearch {
    hosts => localhost
    manage_template => false
    index => "logs-%{+YYYY.MM.dd}"
  }
  # envio al detector, el primer componente de elkorrelator
  tcp{
    host => "IP_ELKorrelator"
    port => 25555
    codec => "json_lines"
  }
}
